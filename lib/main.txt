import 'package:flutter/material.dart';
import 'funcionOperador.dart';
void main(){
  runApp(VolumenApp());
}

class VolumenApp extends StatelessWidget{
  const VolumenApp({
    super.key,
  });

  @override
  Widget build(BuildContext context){
    return MaterialApp(
      title: "convertidor app",
      home: homePage(),
    );
  }
}

class homePage extends StatefulWidget {
  const homePage({super.key});

  @override
  State<homePage> createState() => _homePageState();
}

class _homePageState extends State<homePage> {
  String c1="";
  String c2="";
  double n1=0;
  List<String> vlm = [
    "kilometro cubico",
    "metro cubico",
    "hectolitro",
    "decalitro",
    "decimetro cubico",
    "litro",
    "decilitro",
    "centilitro",
    "centrimetro cubico",
    "mililitro",
    "milimetro cubico",
    "microlitro"
  ];
  TextEditingController _cajatexto1 = TextEditingController();
  TextEditingController _cajatexto2 = TextEditingController();
  @override
  Widget build(BuildContext context) {
    
    
    
    
    return Scaffold(
      appBar: AppBar(
        title: Center(
          child: Text("Convertidor Longitud"),
        ),
      ),
backgroundColor: Color.fromARGB(255, 209, 234, 255),
      body: Center(
        child: Container(
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(10),
            color: Colors
                .white, //hay que colocar elcolor aqui porque sino da error
          ),
          width: 350,
          height: 550,
          child: Column(
            children: <Widget>[
              Align(
                alignment: Alignment.topCenter,
                child: Padding(
                  padding: const EdgeInsets.only(top: 50),
                  child: Text(
                    "Coloque el valor a convertir",
                    style: TextStyle(fontSize: 20),
                  ),
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Align(
                    alignment: Alignment.centerLeft,
                    child: Padding(
                      padding: const EdgeInsets.only(top: 70, left: 20),
                      child: DropdownButton(
                        value:
                            c1, //con esto es que haremos que el valor al seleccionar pues sea el que se selecciono
                        icon: Icon(Icons.keyboard_arrow_down_rounded),
                        items: vlm.map((String items) {
                          return DropdownMenuItem(
                            child: Text(items),
                            value: items,
                          );
                        }).toList(),
                        onChanged: (String? newvalue) {
                          setState(() {
                            c1 = newvalue!;
                          });
                        },
                      ),
                    ),
                  ),
                  Align(
                    alignment: Alignment.centerRight,
                    child: SizedBox(
                      width: 200,
                      child: Padding(
                        padding: const EdgeInsets.only(top: 50, right: 20),
                        child: TextField(
                          textDirection:
                              TextDirection.rtl, //escribe de derecha a
                          //izquierda
                          decoration: InputDecoration(),
                          controller: _cajatexto1,
                        ),
                      ),
                    ),
                  )
                ],
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Align(
                    alignment: Alignment.centerLeft,
                    child: Padding(
                      padding: const EdgeInsets.only(top: 120, left: 20),
                      child: DropdownButton(
                        value: c2,
                        icon: Icon(Icons.keyboard_arrow_down_rounded),
                        items: vlm.map((String items) {
                          return DropdownMenuItem(
                            child: Text(items),
                            value: items,
                          );
                        }).toList(),
                        onChanged: (String? newvalue) {
                          setState(() {
                            c2 = newvalue!;
                          });
                        },
                      ),
                    ),
                  ),
                  Align(
                    alignment: Alignment.centerRight,
                    child: SizedBox(
                      width: 200,
                      child: Padding(
                        padding: const EdgeInsets.only(top: 100, right: 20),
                        child: TextField(
                          textDirection: TextDirection.rtl,
                          decoration: InputDecoration(),
                          controller: _cajatexto2,
                          readOnly:
                              true, //hacer que el textbox sea de solo lectura
                        ),
                      ),
                    ),
                  ),
                ],
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: <Widget>[
                  Align(
                    alignment: Alignment.bottomCenter,
                    child: Padding(
                      padding: const EdgeInsets.only(top: 70),
                      child: ElevatedButton(
                          onPressed: () {procesar(c1,c2,n1, vlm);},
                          child: Text(
                            "Calcular",
                            style: TextStyle(fontFamily: "Roboto"),
                          ),
                          style: ButtonStyle(
                            backgroundColor:
                                MaterialStatePropertyAll(Colors.blue[400]),
                            foregroundColor:
                                MaterialStatePropertyAll(Colors.white),
                          )),
                    ),
                  )
                ],
              )
            ],
          ),
        ),
        ),
    );
  }


  // MÃ©todo que devuelve las opciones para la lista desplegable
  
  
}

